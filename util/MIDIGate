desc: MIDIGate
tags: midi gate

slider1:attack=0.05<0.00, 5, 0.01>Attack
slider2:decay=0.05<0.00, 5, 0.01>Decay
slider3:sustain=1<0.00, 1, 0.01>Sustain
slider4:release=0.05<0.00, 5, 0.01>Release

@init
STEP = 1 / srate;

notes_on = 0;
state = 0;
envelope = 0;

@slider
immediateAttack = attack == 0;
immediateDecay = decay == 0;
immediateRelease = release == 0;


@block
while(midirecv(offset, msg1, msg2, msg3)) (
	isNoteMessage = (msg1 >= 0x80) & (msg1 < 0xA0); // check if the midi message is a note on/off message
	isNoteMessage ? (
		on = msg1 & 16;
		
		// if it is a note message, use it!
		on ? (
			notes_on += 1;
		) : (
			notes_on -= 1;
		);
	);
	midisend(offset, msg1, msg2, msg3); // passthrough all messages
);

notes_on == 0 ? state = 0;


@sample
s = state;
notes_on ? (
	s == 0 ? (
		immediateAttack ? (
			envelope = 1;
		) : (
			envelope = min(1, envelope + (STEP/attack));
		);
		envelope >= 1 ? (
			state = 1;
		);
	);
	s == 1 ? (
		immediateDecay ? (
			envelope = sustain;
		) : (
			envelope = max(sustain, envelope - (STEP/decay));
		);
		envelope <= sustain ? (
			state = 2;
		);
	);
) : (
	envelope > 0 ? (
		immediateRelease ? (
			envelope = 0;
		) : (
			envelope = max(0, envelope - (STEP/release));
		);
	);
); 

spl0 *= envelope;
spl1 *= envelope;
